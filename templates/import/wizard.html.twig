{% extends 'base.html.twig' %}

{% block stylesheets %}

    {# Boostrap #}    
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" >        
    
    {# SmartWizard #}
    <link href="/assets/smartwizard/css/smart_wizard.min.css" rel="stylesheet" type="text/css"/>            
    <link href="/assets/app/css/wizard.css" rel="stylesheet" type="text/css"/>            
    
    {# Dropzone #} 
    <link href="/assets/dropzone/css/dropzone.min.css" rel="stylesheet" type="text/css"/>            
    <link href="/assets/app/css/dropzone.css" rel="stylesheet" type="text/css"/>            
    
    {# FontAwesome#}
    <link href="/assets/font-awesome/css/font-awesome.min.css" rel="stylesheet" type="text/css"/>
    
    {# Toastr #}
    <link href="/assets/admin/toastr/css/toastr.min.css" rel="stylesheet" type="text/css"/>
    
{% endblock %}

{% block javascripts %}

    {{ parent() }}
    
    {# Jquery #} 
    <script src="/assets/jquery/js/jquery.min.js" type="text/javascript"></script>
    
    {# SmartWizard #}
    <script src="/assets/smartwizard/js/jquery.smartWizard.min.js" type="text/javascript"></script>    

    {# Dropzone #}
    <script src="/assets/dropzone/js/dropzone.min.js" type="text/javascript"></script>    
    
    {# Vuejs #}
    <script src="/assets/vue/js/vue.min.js" type="text/javascript"></script>
    
    {# LoadingOverlay #}
    <script src="/assets/loadingoverlay/js/loadingoverlay.min.js" type="text/javascript"></script>

    {# Toastr #}
    <script src="/assets/admin/toastr/js/toastr.min.js" type="text/javascript"></script>
    
        
    <script>
        
        Dropzone.autoDiscover = false;

        var dropzone = null;

        $(document).ready(function () {                                                

            dropzone = $("#dropzone-1").dropzone(
                { 
                    autoProcessQueue: false,
                    url: '/url',
                    maxFiles: 1,
                    previewTemplate: document.querySelector('#dropzone-preview-template').innerHTML,
                    dictDefaultMessage: "Arrastra y suelta el archivo aquí",
                    init: function() {
                        this.on("maxfilesexceeded", function (file) {                            
                            this.removeAllFiles();
                            this.addFile(file);
                        });
                    }
                }
            );
        });        
        
        $(document).ready(function () {            
        
            // 1 - Procesamiento pendiente
            // 2 - En proceso (por ejemplo: esperando respuesta de una petición AJAX)
            // 3 - Procesamiento completado
            
            // Predeterminado en 1
            var stepStatus = 1;            
            var $asistente = $('#asistente').smartWizard(
                {
                    theme: 'arrows-1',
                    useURLhash: false, // Enable selection of the step based on url hash
                    lang: {  // Language variables
                        next: 'Siguiente', 
                        previous: 'Anterior'
                    },
                    toolbarSettings: {
                        //toolbarPosition: 'both'
                    },
                    anchorSettings: {
                        anchorClickable: false, // Enable/Disable anchor navigation
                        enableAllAnchors: false, // Activates all anchors clickable all times
                        markDoneStep: true, // Add done css
                        markAllPreviousStepsAsDone: true, // When a step selected by url hash, all previous steps are marked done
                        removeDoneStepOnNavigateBack: true, // While navigate back done step after active step will be cleared
                        enableAnchorOnDoneStep: true // Enable/Disable the done steps navigation
                    }
                }
            );
            
            $("#asistente").on("showStep", function(e, anchorObject, stepNumber, stepDirection){
               
               stepStatus = 1;
                       
            });
            $("#asistente").on("leaveStep", function (e, anchorObject, stepNumber, stepDirection){                                
                
                // Si no está especificado el valor de stepStatus no permito la navegación
                if (stepStatus === null)
                {
                    console.info('No se pudo determinar el valor de stepStatus');
                    return false;
                }
                
                // Incremento en 1 porque el stepNumber es zero-based
                var outgoingStep = stepNumber + 1;
                
                console.info('Dejando paso: ' + outgoingStep);
                
                // Determino el paso al que se quiere ir
                
                var incomingStep = null;                                
                
                if (stepDirection === 'forward')
                {
                    incomingStep = outgoingStep + 1;
                }
                else if (stepDirection === 'backward')
                {
                    incomingStep = outgoingStep - 1;
                }
                else
                {
                    // Si no se puede determinar la dirección de la navegación, no permito
                    // la transición de pasos
                    
                    return false;
                }                             
             
                // Si no se pudo determinar el paso hacia el que se está navegando
                // no habilito la navegación
                if (incomingStep === null)
                {
                    return false;
                }
                
                // Si la navegación es hacia atrás, borro los datos de todos los pasos
                // posteriores                                
                
                if (stepDirection === 'backward')
                {
                    // TODO: borrar los datos de los pasos posteriores
                    
                    // Habilito todos los pasos
                    $('#asistente').smartWizard("stepState", 0, 'enable');
                    $('#asistente').smartWizard("stepState", 1, 'enable');
                    $('#asistente').smartWizard("stepState", 2, 'enable');
                    $('#asistente').smartWizard("stepState", 3, 'enable');
                    
                    return true;
                }
                
                // De aquí en adelante es la lógica que se ejecuta cuando la dirección
                // es FORWARD
        
                // Si se quiere dejar un paso cuyo procesamiento está completado permito
                // la navegación al próximo paso
                
                if (stepStatus === 3)
                {
                    return true;
                }                 
                
                // Si se quiere dejar un paso que está en procesamiento no permito
                // la navegación al próximo paso
                
                if (stepStatus === 2)
                {
                    return false;
                }                
        
                if (outgoingStep === 1)
                {
                    // Marco el paso como "en proceso"
                    stepStatus = 2;
                    
                    sendStep0();
                }                
                else if (outgoingStep === 2)
                {
                    // Marco el paso como "en proceso"
                    stepStatus = 2;
                    
                    sendStep1();
                }
                else if (outgoingStep === 3)
                {
                    // Marco el paso como "en proceso"
                    stepStatus = 2;
                    
                    sendStep2();
                }
                else if (outgoingStep === 4)
                {                    
                    app.steps.step3.records = app.steps.step2.records;
                    app.steps.step3.recordIndexesWithErrors = [1, 30 , 45];
                                
                    return true;
                }  
                
                return false;
            });
            
            var sendStep0 = function() {
            
                var formData = new FormData(document.getElementById('form-step-0'));

                showStepInProcess();
                
                $.ajax({
                    type: 'POST',
                    cache: false,
                    processData: false,
                    contentType: false,
                    dataType: 'json',
                    data: formData,
                    url: '{{ path('admin_import_step0') }}',
                    success: function (data) {
                        showStepFinished();
                        // Marco el paso como "proceso terminado"
                        stepStatus = 3;
                        for (var index in data.errores_generales)
                        {
                            toastr.error(data.errores_generales[index], 'Atención!');
                        }
                        if (data.no_avanzar_al_siguiente_paso)
                        {                
                            stepStatus = 1;
                        }
                        else
                        {
                            $('#asistente').smartWizard("next");     
                        }                                               
                    },
                    error: function(xhr, textStatus, error) {
                        
                        showStepFinished();
                        
                        toastr.error(error, 'Atención!');
                        
                        console.log(xhr.statusText);
                        console.log(textStatus);
                        console.log(error);
                        
                        // Marco el paso como "proceso pendiente"
                        stepStatus = 1;                                                   
                    }                            
                });            
            };            
            
            var sendStep1 = function() {
            
                var formData = new FormData();
                var files = dropzone.get(0).dropzone.getAcceptedFiles();
                formData.append('file', files[0]);
                showStepInProcess();
                $.ajax({
                    type: 'POST',
                    cache: false,
                    processData: false,
                    contentType: false,
                    dataType: 'json',
                    data: formData,
                    url: '{{ path('admin_import_step1') }}',
                    success: function (data) {
                        showStepFinished();
                        // Marco el paso como "proceso terminado"
                        stepStatus = 3;
                        
                        for (var index in data.errores_generales)
                        {
                            toastr.error(data.errores_generales[index], 'Atención!');
                        }
                        if (data.no_avanzar_al_siguiente_paso)
                        {                
                            stepStatus = 1;
                        }
                        else
                        {
                            app.steps.step2.records = data.records;
                            app.steps.step2.recordIndexesWithErrors = data.records_index_with_errors;
                            // Si tiene errores, deshabilitar próximo paso
                            if (app.steps.step2.recordIndexesWithErrors.length > 0)
                            {
                                $('#asistente').smartWizard("stepState", 3, 'disable');
                            }

                            $('#asistente').smartWizard("next");
                        }                                               
                    },
                    error: function(xhr, textStatus, error) {
                        
                        showStepFinished();
                        
                        toastr.error(error, 'Atención!');
                        
                        console.log(xhr.statusText);
                        console.log(textStatus);
                        console.log(error);
                        
                        // Marco el paso como "proceso pendiente"
                        stepStatus = 1;                                                   
                    }                            
                });            
            };
            
            var sendStep2 = function() {
            
                showStepInProcess();
            
                var formData = new FormData(document.getElementById('form-step-0'));
                
                var files = dropzone.get(0).dropzone.getAcceptedFiles();
                formData.append('file', files[0]);
                $.ajax({
                    type: 'POST',
                    cache: false,
                    processData: false,
                    contentType: false,
                    dataType: 'json',
                    data: formData,
                    url: '{{ path('admin_import_step2') }}',
                    success: function (data) {
 
                        showStepFinished();
                        // Marco el paso como "proceso terminado"
                        stepStatus = 3;
                        for (var index in data.errores_generales)
                        {
                            toastr.error(data.errores_generales[index], 'Atención!');
                        }
                        if (data.no_avanzar_al_siguiente_paso)
                        {                
                            stepStatus = 1;
                        }
                        app.steps.step3.records = data.records;
                        app.steps.step3.recordIndexesWithErrors = data.records_index_with_errors;
                        
                        // Como es el último paso no importa si da error o no,
                        // no hay pasos que deshabilitar
                        $('#asistente').smartWizard("next");                                                        
                    },
                    error: function(xhr, textStatus, error) {
                        
                        showStepFinished();
                        
                        toastr.error(error, 'Atención!');
                        
                        console.log(xhr.statusText);
                        console.log(textStatus);
                        console.log(error);
                        
                        // Marco el paso como "proceso pendiente"
                        stepStatus = 1;                                                   
                    }                                    
                });            
            }; 
            
            var showStepInProcess = function() {
            
                $("#asistente").LoadingOverlay("show", {
                    background  : "rgba(255, 255, 255, 0.5)",
                    imageColor: "#598ec3"                    
                });                      
            };
            
            var showStepFinished = function() {            
                
                $("#asistente").LoadingOverlay("hide", true);                        
            };            
        });
    </script>    

    <script type="text/javascript">
        var app = new Vue({
            el: '#asistente',
            delimiters: ['${', '}'],
            data: {
                steps: {
                    step0: {
                        profesion: null,
                        serviciosAsignados: []                        
                    },
                    step1: {

                    },
                    step2: {
                        records: [],
                        recordIndexesWithErrors: []
                    },
                    step3: {
                        records: [],
                        recordIndexesWithErrors: []
                    }
                }
            }
        });
        
    </script>
    
    <script>
    
        var removeLineaAsignacionServicio = function(index) {
            
            $('[data-asignacion-servicio-id="'+index+'"]').remove();
        };
    
    </script>
    
{% endblock %}

{% block body %}
    
    <div id="dropzone-preview-template" class="dz-preview dz-file-preview" style="display: none;">
        <div class="dz-details text-center" style="margin-top: 115px;">            
            <div class="dz-filename"><span data-dz-name></span></div>
            <div class="dz-size" data-dz-size></div>
        </div>
        <div class="dz-progress"><span class="dz-upload" data-dz-uploadprogress></span></div>
        <div class="dz-success-mark"><span>✔</span></div>
        <div class="dz-error-mark"><span>✘</span></div>
        <div class="dz-error-message"><span data-dz-errormessage></span></div>
    </div>      
    
    <div id="asistente" style="margin-top: 20px;">
        <ul>
            <li><a href="#step-0">Paso 1<br /><small>Datos Generales</small></a></li>
            <li><a href="#step-1">Paso 2<br /><small>Carga del archivo</small></a></li>
            <li><a href="#step-2">Paso 3<br /><small>Vista previa y Validación</small></a></li>
            <li><a href="#step-3">Paso 4<br /><small>Resultado de la Importación</small></a></li>            
        </ul>
        <div style="padding-top: 0px;">
            <div id="step-0" style="margin-top: 15px;">             
                <div class="row" style="margin-bottom: 10px;">
                    <div class="col-md-12">                          
                        <h3>Datos Generales</h3>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <form id="form-step-0" class="form-horizontal" role="form">
                            <div class="form-group">
                                <label class="col-md-12 control-label">Profesión</label>
                                <div class="col-lg-6">
                                    {{ form_widget(form.profesion, {'attr': {'class': 'form-control'}}) }}
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-md-12 control-label">Asignación de Servicios</label>
                                <div class="col-md-12">
                                    {% for asignacionServicio in form.asignacionServicios %}
                                    <div class="row" style="margin-bottom: 10px;" data-asignacion-servicio-id="{{ loop.index }}">
                                        <div class="col-md-5">
                                            {{ form_widget(asignacionServicio.servicio, {'attr': {'class': 'form-control'}}) }}
                                        </div>
                                        <div class="col-md-5">
                                            {{ form_widget(asignacionServicio.conjuntoAtributoInstancia, {'attr': {'class': 'form-control'}}) }}
                                        </div>
                                        <div class="col-md-2">
                                            <button type="button" class="btn btn-default" onclick="removeLineaAsignacionServicio({{ loop.index }})">
                                                <i class="fa fa-trash"></i>
                                            </button>
                                        </div>                                        
                                    </div>
                                    {% endfor %}                                                                        
                                </div>                                
                            </div>
                        </form>                        
                    </div>
                </div>
            </div>            
            <div id="step-1" style="margin-top: 15px;">  
                <div class="row" style="margin-bottom: 10px;">
                    <div class="col-md-12">
                        <h3>Carga del archivo</h3>
                    </div>
                </div>                
                <div class="row">
                    <div class="col-md-12">                          
                        <div id="dropzone-1" class="dropzone">
                            <form>
                                <input type="file" style="display: none;" name="file" id="file" aria-describedby="fileHelp" placeholder="Seleccione un archivo">               
                            </form>
                        </div>
                    </div>
                </div>
            </div>
            <div id="step-2" style="margin-top: 15px;">
                <div class="row" style="margin-bottom: 10px;">
                    <div class="col-md-12">
                        <h3>
                            <i v-if="steps.step2.recordIndexesWithErrors.length == 0" class="fa fa-check text-success"></i> 
                            <i v-if="steps.step2.recordIndexesWithErrors.length > 0" class="fa fa-remove text-danger"></i> 
                            Vista previa y Validación
                        </h3>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="panel panel-default">                        
                            <div class="panel-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <h4><b>${steps.step2.records.length}</b> registros a importar</h4>
                                    </div>
                                    <div class="col-md-6">
                                        <h4><b>${steps.step2.recordIndexesWithErrors.length}</b> registros con errores</h4>
                                    </div>
                                </div>
                                <div class="row" v-if="steps.step2.recordIndexesWithErrors.length > 0">
                                    <div class="col-md-12">
                                        <h4>Registros con errores:</h4> &nbsp;
                                        <template v-for="recordIndex in steps.step2.recordIndexesWithErrors">
                                            <a v-bind:href="'#registro-'+ (recordIndex + 1)">${recordIndex + 1}</a>,&nbsp;
                                        </template>                                        
                                    </div>
                                </div>                                                       
                            </div>
                        </div>                    
                    </div>
                </div>                
                <div class="row" style="margin-top: 10px;">
                    <div class="col-md-12">
                        <div class="table-responsive">
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th></th>
                                        {% for fieldDefinition in fieldsDefinition %}
                                        <th align="{{fieldDefinition.alignment}}">{{fieldDefinition.label}}</th>
                                        {% endfor %}
                                        <th style="width: 250px;">Errores encontrados</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr v-for="(record, key) in steps.step2.records">
                                        <td v-bind:id="'registro-' + (key + 1)">${key + 1}</td>
                                        {% for fieldDefinition in fieldsDefinition %}
                                        <td align="{{fieldDefinition.alignment}}" style="white-space: {{fieldDefinition.breakLine ? 'normal' : 'nowrap'}}">${record.{{fieldDefinition.name}}}</td>
                                        {% endfor %}
                                        <td>
                                            <ul>
                                                <li v-for="error in record.errors" class="text-danger">
                                                    ${error}
                                                </li>
                                            </ul>                                            
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div id="step-3" style="margin-top: 15px;">            
                <div class="row">
                    <div class="col-md-12">              
                        
                        <div class="jumbotron text-center" style="background-color: #ffffff">
                            <h1><i class="fa fa-check-circle-o text-success"></i></h1>
                            <h1>Importación Exitosa</h1>
                            <h2>                                
                                Se han importado <b>${steps.step3.records.length}</b> profesionales
                            </h2>
                        </div>                        
                    </div>
                </div>
            </div>
        </div>    
    </div>
{% endblock %}


